---
- include_tasks: "{{ ansible_os_family | lower }}.yml"
  when: ansible_os_family in ['Debian', 'Darwin']

- name: "install tools ==> {{ packages | join(', ') }}"
  vars:
    _packages:
      - 1password
      - awscli
      - bat
      - coreutils
      - direnv
      - eza # NOTE: on Debian only available on `sid` or newer, not on `bookworm` and before
      - fzf
      - file
      - firefox
      - git
      - git-delta
      - curl
      - wget
      - httpie
      - jq
      - lz4
      - moreutils
      - p7zip
      - ripgrep
      - unzip
      - yt-dlp
      - "{{ 'fd'              if ansible_os_family == 'Darwin' else 'fd-find' }}"
      - "{{ 'keychain'        if ansible_os_family != 'Darwin' else omit }}"
      - zoxide
      - uv
      - "{{ 'go'              if ansible_os_family == 'Darwin' else 'golang' }}"
      - rustup
      - neovim
      - wezterm
      - starship
    packages: "{{ _packages | reject('equalto', omit) | sort | list}}"
  package:
    name: "{{ packages }}"
  tags:
    - tools

- name: install podman
  package:
    name:
      - podman
      - podman-desktop
  tags:
    - docker
    - containers
    - podman

- name: install tailscale
  package:
    name:
      - tailscale
  tags:
    - tailscale

- name: Install neovim python venv
  pip:
    executable: /usr/bin/pip3
    name:
      - pynvim
      - beancount

- name: Install rust via rustup
  command: rustup-init -y
  args:
    creates: "{{ ansible_env.HOME }}/.cargo/bin/cargo"

- name: Install Node
  # NOTE: this expects jorgebucaran/nvm.fish to be installed
  ansible.builtin.shell: nvm install lts
  args:
    executable: "{{ fish_path.stdout }}"
    creates: "{{ ansible_env.HOME }}/.local/share/nvm/*/bin/node"
- name: Install python
  ansible.builtin.command: uv python install
  args:
    creates: "{{ ansible_env.HOME }}/.local/share/uv/python/*/"
