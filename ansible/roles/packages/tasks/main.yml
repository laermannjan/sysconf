---
- include_tasks: "{{ ansible_os_family | lower }}.yml"

- name: "install tools ==> {{ packages | join(', ') }}"
  vars:
    _packages:
      - 1password
      - awscli
      - bat
      - coreutils
      - direnv
      - eza # NOTE: on Debian only available on `sid` or newer, not on `bookworm` and before
      - fzf
      - file
      - firefox
      - git
      - git-delta
      - curl
      - wget
      - httpie
      - jq
      - lz4
      - moreutils
      - p7zip
      - ripgrep
      - unzip
      - yt-dlp
      - "{{ 'fd'              if ansible_os_family == 'Darwin' else 'fd-find' }}"
      - "{{ 'keychain'        if ansible_os_family != 'Darwin' else omit }}"
      - zoxide
      - uv
      - "{{ 'go'              if ansible_os_family == 'Darwin' else 'golang' }}"
      - rustup
      - tailscale
      - neovim
      - podman
      - wezterm
      - starship
      - lazygit
      - lazydocker
      - doggo
      - "{{ 'dust'            if ansible_os_family == 'Darwin' else 'du-dust' }}"
    packages: "{{ _packages | reject('equalto', omit) | sort | list}}"
  become: "{{ ansible_pkg_mgr != 'brew' }}"
  package:
    name: "{{ packages }}"
  tags:
    - tools

- name: Install neovim python venv
  pip:
    executable: /usr/bin/pip3
    name:
      - pynvim
      - beancount

- name: Install rust via rustup
  command: rustup-init -y
  args:
    creates: "{{ ansible_env.HOME }}/.cargo/bin/cargo"

- name: Install Node
  # NOTE: fisher update must come first so plugins won't be erased from ~/.config/fish/fish_plugins file
  ansible.builtin.shell: |
    fisher update
    fisher install jorgebucaran/nvm.fish
    nvm install lts
  args:
    executable: fish
    creates: "{{ ansible_env.HOME }}/.local/share/nvm/*/bin/node"
  environment:
    PATH: "/opt/homebrew/bin:/home/linuxbrew/.linuxbrew/bin:{{ lookup('env', 'PATH') }}"

- name: Install python
  ansible.builtin.command: uv python install
  args:
    creates: "{{ ansible_env.HOME }}/.local/share/uv/python/*/"
